server
{
    server_name hostname;

    listen 1025 ssl;
    ssl_protocols TLSv1.3;

    ssl_certificate /etc/nginx/ssl/ft_transcendence_host.crt;
    ssl_certificate_key /etc/nginx/ssl/ft_transcendence_host.key;

    root /home/front-end/;

    index index.html;
    autoindex off;
    # Désactive la possibilité de lire l'arborescence des fichiers du serveur

    # 'add_header' ajoute une instruction en entête des fichiers servis pour indiquer au navigateur des instructions

    add_header Strict-Transport-Security "max-age=6307200; includeSubDomains;";
    # Spécifie au navigateur d'utiliser https quoi qu'il arriver pour éviter tout contournement
    # max-age indique la durée de cette restriction, includeSubDomains applique cette instruction à l'ensemble du site
    add_header Content-Security-Policy "script-src https://hostname:1025/ https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js; script-src-elem https://hostname:1025/ https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js; object-src 'none'; media-src https://hostname:1025/; style-src https://hostname:1025/ https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css; style-src-elem https://hostname:1025/ https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css; font-src https://hostname:1025/; img-src https://hostname:1025/ data:; frame-ancestors 'none';";
    # Indique la source autorisée pour chaque éléments

    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
    # Désactive par défaut ces fonctionnalités
    add_header X-Frame-Options "DENY";
    # Empêche le site d'être intégré dans des frames depuis un autre site

    add_header X-Content-Type-Options "nosniff";
    # Empêche le navigateur de réinterpréter l'extension d'un fichier (si un fichier malveillant a été glissé dans le serveur)

    # access_log /dev/stdout;
    # error_log /dev/stderr;

    error_page 404 /404.html;
    error_page 401 403 405 /405.html;
    error_page 500 502 503 504 /500.html;
    # Définition des fichiers pour chaque codes d'erreur

    location / {

        if ($request_method !~ ^(GET|HEAD)$) {
            return 405;
        }
        # Limite les méthodes HTTP exécutées à GET et HEAD
        # (acquisition des fichiers ou d'infos sur ces fichiers seulement)

        rewrite ^/$ /index.html;
        # Modifie une requête 'GET /' en 'GET /index.html' (requête initiale à la connexion)

        try_files $uri $uri/ = 404;
        # Essai de l'url et de l'url/ sinon, erreur 404

        if ($uri !~ \.(/|html|js|css|png|mp4|mp3)) {
            return 404;
        }
        # Interdit les requêtes de fichier ne se terminant par ces extensions
    }

    location /Errors {
        return 405;
    }

    location = /404.html {
        root /home/front-end/Errors/;
        internal;
    }
    location = /405.html {
        root /home/front-end/Errors/;
        internal;
    }
    location = /500.html {
        root /home/front-end/Errors/;
        internal;
    }
    # Définition des chemins vers les pages d'erreur
    # Internal interdit l'accès manuel à ces fichiers
}
